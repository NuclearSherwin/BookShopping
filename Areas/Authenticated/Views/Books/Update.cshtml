@model BookShopping.ViewModels.UpsetBookViewModel

@{
    Layout = "_Layout";
}
<div class="container">
    <h2>Update Book</h2>
    <br>
        <form method="post" enctype="multipart/form-data">
            <input asp-for="Book.Id" hidden>
            <div class="form-group">
                <label asp-for="Book.Name"></label>
                <input asp-for="Book.Name" type="text" class="form-control" id="exampleInputPosition2" placeholder="Name">
                <span asp-validation-for="Book.Name" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Book.Description"></label>
                <input asp-for="Book.Description" type="text" class="form-control" id="exampleInputPosition2" placeholder="Description">
                <span asp-validation-for="Book.Description" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Book.Price"></label>
                <input asp-for="Book.Price" type="text" class="form-control" id="exampleInputPosition2" placeholder="Price">
                <span asp-validation-for="Book.Price" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Book.Author"></label>
                <input asp-for="Book.Author" type="text" class="form-control" id="exampleInputPosition2" placeholder="Author">
                <span asp-validation-for="Book.Author" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Book.NoPage"></label>
                <input asp-for="Book.NoPage" type="text" class="form-control" id="exampleInputPosition2" placeholder="NoPage">
                <span asp-validation-for="Book.NoPage" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label for="file-input">Choose a file: <span class="text-danger">Current file Name: @Model.OldFileName</span></label>
                <div class="input-group">
                    <div class="custom-file">
                        <input type="file" class="custom-file-input" id="file" name="File">
                        <label class="custom-file-label" for="file-input">Choose file</label>
                    </div>
                </div>
            </div>
            
            <div class="form-group">
                <label>Category</label>
                @Html.DropDownListFor(m => m.Book.CategoryId, Model.Categories, "--Select Category", new { @class = "form-control" })
                @* @Html.DropDownListFor(m => m.CustId, new SelectList(Model.Customers, "ID","FirstName"), "--Select customer") *@
                <span asp-validation-for="Book.CategoryId" class="text-danger"></span>  
            </div>
            <button type="submit" class="btn btn-primary">Submit</button>
        </form>
    </br>
</div>

<script>
  // Update the label when a file is selected
  $('#file').on('change', function() {
    // Get the file name
    var fileName = $(this).val().split('\\').pop();
    // Replace the "Choose file" label with the selected file name
    $(this).next('.custom-file-label').html(fileName);
  });
  
  const form = document.getElementById('myForm');
        const fileInput = document.getElementById('file');
    
        form.addEventListener('submit', event => {
            event.preventDefault();
    
            if (fileInput.files.length === 0) {
                alert('Please select a file.');
                return;
            }
            
            form.submit();
        });
</script>